{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","validTitle","submitButtonPressed","formHasErrors","defaultState","handleChange","event","target","name","value","setState","createMovie","preventDefault","Math","random","props","onAdd","this","onSubmit","id","placeholder","onChange","autoComplete","onBlur","titleValidation","type","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acbb3d13.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    validTitle: true,\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    submitButtonPressed: false,\n    formHasErrors: false,\n  };\n\n  defaultState = { ...this.state }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  createMovie = (event) => {\n    event.preventDefault();\n    this.setState(({ submitButtonPressed: true }));\n\n    if (!this.state.formHasErrors) {\n      const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n      const movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        // eslint-disable-next-line max-len\n        imdbId: imdbId || Math.random(), // cheet first solution (no optional task)\n      };\n\n      this.props.onAdd(movie);\n\n      this.setState(state => ({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        submitButtonPressed: false,\n      }));\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.createMovie}>\n\n        <div className=\"form-input\">\n          <input\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"new title\"\n            value={title}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            onBlur={this.titleValidation}\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <input\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <input\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <input\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"form-input\">\n          <input\n            id=\"imdbId\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n\n        </div>\n\n        <button type=\"submit\">add</button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}